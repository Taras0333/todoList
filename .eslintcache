[{"/Users/taraskhomyn/Desktop/Projects/ToDo/app/src/reportWebVitals.js":"1","/Users/taraskhomyn/Desktop/Projects/ToDo/app/src/App.js":"2","/Users/taraskhomyn/Desktop/Projects/ToDo/app/src/index.js":"3","/Users/taraskhomyn/Desktop/Projects/ToDo/app/src/todo/todoFunc.js":"4","/Users/taraskhomyn/Desktop/Projects/ToDo/app/src/todo/todoView/added.js":"5","/Users/taraskhomyn/Desktop/Projects/ToDo/app/src/todo/todoView/done.js":"6"},{"size":362,"mtime":1606577128123,"results":"7","hashOfConfig":"8"},{"size":198,"mtime":1606676074343,"results":"9","hashOfConfig":"8"},{"size":500,"mtime":1606577128121,"results":"10","hashOfConfig":"8"},{"size":2066,"mtime":1606676080564,"results":"11","hashOfConfig":"8"},{"size":892,"mtime":1606676087347,"results":"12","hashOfConfig":"8"},{"size":678,"mtime":1606676091562,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1sy8hoo",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/taraskhomyn/Desktop/Projects/ToDo/app/src/reportWebVitals.js",[],["28","29"],"/Users/taraskhomyn/Desktop/Projects/ToDo/app/src/App.js",["30"],"/Users/taraskhomyn/Desktop/Projects/ToDo/app/src/index.js",[],"/Users/taraskhomyn/Desktop/Projects/ToDo/app/src/todo/todoFunc.js",["31","32","33","34","35","36"],"import React, {useState, useEffect} from 'react';\nimport {Added} from './todoView/added';\nimport {Done} from './todoView/done';\nimport './todoFunc.css';\nimport Check from './images/check.svg';\n\nexport const ToDo = () => {\n\nconst [state, updateState] = useState([]);\nconst [done, updateDone] = useState([]);\nconst [task, updateTask] = useState('');\nconst [inputValue, updateInputValue] = useState('');\n\nconst getTask = (e) => {\n    updateTask(e.target.value);\n    updateInputValue(e.target.value);\n}\nconst getTaskByEnter = (e) => {\n    if(e.key === 'Enter'){\n       save();\n    }\n}\nconst save = () => {\n    let copy = [...state];\n    copy.push({\n        name: task,\n     })\n    updateState(copy);\n    updateTask('');\n    updateInputValue('');\n}\nconst move = (e)=>{\n    let element = '';\n    state.map((el, i)=>{\n        if(e.target.parentElement.parentElement.innerText === el.name){\n          element =  state.splice(i, 1)[0]\n           updateState([...state]);\n           let copy = [...done];\n           copy.push(element)\n           updateDone(copy);\n        } \n    })\n}\nconst deleteList = (e) => {\n    state.map((el, i)=>{\n        if(e.target.parentElement.parentElement.innerText === el.name){\n         let element =  state.splice(i, 1)[0]\n           updateState([...state]);\n        } \n    })\n}\nconst deleteDone = (e) => {\n    done.map((el, i)=>{\n        if(e.target.parentElement.parentElement.innerText === el.name){\n         let element =  done.splice(i, 1)[0]\n           updateDone([...done]);\n        } \n    })\n}\n    return(\n        <>\n            <div className='input-cont'>\n                <input type='text' className='input' placeholder='add new task' onChange={getTask} value={inputValue} onKeyDown={getTaskByEnter}/>\n                <div className='intup-save'>\n                    <img className='input-icon' src={Check} alt='check icon' onClick={save}/>\n                </div>\n            </div>\n            <Added todos={state} move={move} deleteList={deleteList}/>\n            <Done  done={done} deleteDone={deleteDone}/>\n        </>\n    );\n\n};","/Users/taraskhomyn/Desktop/Projects/ToDo/app/src/todo/todoView/added.js",["37"],"/Users/taraskhomyn/Desktop/Projects/ToDo/app/src/todo/todoView/done.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":12},{"ruleId":"42","severity":1,"message":"46","line":1,"column":26,"nodeType":"44","messageId":"45","endLine":1,"endColumn":35},{"ruleId":"47","severity":1,"message":"48","line":34,"column":22,"nodeType":"49","messageId":"50","endLine":34,"endColumn":24},{"ruleId":"47","severity":1,"message":"48","line":45,"column":22,"nodeType":"49","messageId":"50","endLine":45,"endColumn":24},{"ruleId":"42","severity":1,"message":"51","line":47,"column":14,"nodeType":"44","messageId":"45","endLine":47,"endColumn":21},{"ruleId":"47","severity":1,"message":"48","line":53,"column":21,"nodeType":"49","messageId":"50","endLine":53,"endColumn":23},{"ruleId":"42","severity":1,"message":"51","line":55,"column":14,"nodeType":"44","messageId":"45","endLine":55,"endColumn":21},{"ruleId":"42","severity":1,"message":"52","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":13},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'element' is assigned a value but never used.","'White' is defined but never used.","no-global-assign","no-unsafe-negation"]